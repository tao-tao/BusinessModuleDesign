package ${packageName};

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.ServletRequestUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import avicit.platform6.api.session.SessionHelper;
import avicit.platform6.commons.utils.JsonHelper;
import avicit.platform6.core.domain.BeanProcess;
import avicit.platform6.core.properties.PlatformConstant.OpResult;
import avicit.platform6.core.rest.msg.PageParameter;
import avicit.platform6.core.rest.msg.QueryReqBean;
import avicit.platform6.core.rest.msg.QueryRespBean;
import ${pack}${modeName}.${tableInfo.entityBean.lowerAllCharName}.dto.${tableInfo.entityBean.standName}DTO;
import ${pack}${modeName}.${tableInfo.entityBean.lowerAllCharName}.service.${tableInfo.entityBean.standName}Service;

import com.fasterxml.jackson.core.type.TypeReference;

/**
 * @classname: ${tableInfo.entityBean.standName}Controller
 * @description: 定义${tableInfo.tableComment} 流程表单控制层
 * @author:   ${author} 
 */
@Controller
@Scope("prototype")
@RequestMapping("${mappingPath}${tableInfo.entityBean.standName}Controller")
public class  ${tableInfo.entityBean.standName}Controller{
    private static final Logger logger =  LoggerFactory.getLogger(${tableInfo.entityBean.standName}Controller.class);
    
    @Autowired
    private  ${tableInfo.entityBean.standName}Service service;
    /**
     * 跳转到管理页面
     * @param request 请求
     * @param reponse 响应
     * @return
     */
    @RequestMapping(value="${tableInfo.entityBean.standName}Info")
	public ModelAndView toDemoBusinessFlow(HttpServletRequest request,HttpServletResponse reponse){
		ModelAndView mav = new ModelAndView();
		mav.setViewName("${preurl}${tableInfo.entityBean.standName}Manage");
		request.setAttribute("url", "platform/${mappingPath}${tableInfo.entityBean.standName}Controller/operation/");	
		return mav;
	}
    
    @RequestMapping(value="/operation/get${tableInfo.entityBean.standName}sByPage")
	@ResponseBody
	public Map<String,Object> toget${tableInfo.entityBean.standName}ByPage(PageParameter pageParameter,HttpServletRequest request) throws Exception{
		QueryReqBean<Map<String, Object>> queryReqBean = new QueryReqBean<Map<String, Object>>();
		queryReqBean.setPageParameter(pageParameter);
		HashMap<String,Object> map = new HashMap<String, Object>();
		String json = ServletRequestUtils.getStringParameter(request, "param", "");
		Map<String, Object> param = null;
		QueryRespBean<${tableInfo.entityBean.standName}DTO> result =null;
		if(json!= null && !"".equals(json)){
			param = JsonHelper.getInstance().readValue(json, new TypeReference<HashMap<String, Object>>(){});
			param.put("currUserId", SessionHelper.getLoginSysUserId(request));
			queryReqBean.setSearchParams(param);
		}
//		try {
			 result = service.search${tableInfo.entityBean.standName}ByPage(queryReqBean);
//		} catch (Exception ex) {
//			logger.debug(ex.getMessage());
//			ex.printStackTrace();
//			return map;  
//		}
		map.put("total",result.getPageParameter().getTotalCount());
		map.put("rows", result.getResult());
		logger.debug("成功获取SysLookupType分页数据");
		return map;
	}
    
    //打开编辑或者添加页
    /**
     * 根据id选择跳转到新建页还是编辑页
     * @param type 操作类型新建还是编辑
     * @param id 编辑数据的id
     * @param request 请求
     * @return
     * @throws Exception
     */
  	@RequestMapping(value="/operation/{type}/{id}")
  	public ModelAndView toOpertionPage(@PathVariable String type,
  										@PathVariable String id,
  										HttpServletRequest request)throws Exception{
  		ModelAndView mav= new ModelAndView();
  		if(!"null".equals(id)){//编辑窗口或者详细页窗口
  			//主表数据
//  			LogBase logBase = LogBaseFactory.getLogBase( request);
  			${tableInfo.entityBean.standName}DTO ${tableInfo.entityBean.lowerFirstCharName}DTO = service.query${tableInfo.entityBean.standName}ByPrimaryKey(id);
  			request.setAttribute("${tableInfo.entityBean.lowerFirstCharName}DTO", ${tableInfo.entityBean.lowerFirstCharName}DTO);
  			request.setAttribute("id", id);
  		}
  		mav.setViewName("${preurl}"+"${tableInfo.entityBean.standName}"+type);
  		return mav;
  	}
  	
  	/**
  	 * 新增并启动流程
  	 * @param request
  	 * @return
  	 */
  	@RequestMapping(value="/operation/saveAndStartProcess",method=RequestMethod.POST)
  	public ModelAndView saveAndStartProcess(HttpServletRequest request){
  		ModelAndView mav= new ModelAndView();
  		
		String processDefId = ServletRequestUtils.getStringParameter(request, "processDefId", "");
		String formCode = ServletRequestUtils.getStringParameter(request, "formCode", "");
		String jsonString = ServletRequestUtils.getStringParameter(request, "jsonString", "");
		String datas = ServletRequestUtils.getStringParameter(request, "datas", "");
		
		try {
			${tableInfo.entityBean.standName}DTO ${tableInfo.entityBean.lowerFirstCharName} = JsonHelper.getInstance().readValue(datas, ${tableInfo.entityBean.standName}DTO.class);
			String userId = (String)request.getSession().getAttribute("userId");
			String deptId = (String)request.getSession().getAttribute("deptId");
			/////////////////启动流程所需要的参数///////////////////
			Map<String, Object> parameter = new HashMap<String,Object>();
			parameter.put("processDefId", processDefId);
			parameter.put("formCode", formCode);
			parameter.put("jsonString", jsonString);
			parameter.put("userId", userId);
			parameter.put("deptId", deptId);
		
			BeanProcess bp = service.insert${tableInfo.entityBean.standName}AndStartProcess(${tableInfo.entityBean.lowerFirstCharName},  parameter);
			
			mav.addObject("flag",OpResult.success);
			mav.addObject("bp",bp);
		} catch (Exception e) {
			e.printStackTrace();
			mav.addObject("flag",OpResult.failure);
			mav.addObject("msg",e.getMessage());
		}
  		return mav;
  	}
  	
  	/**
  	 * 保存数据
  	 * @param id 主键id
  	 * @param demoBusinessTripDTO 保存的对象
  	 * @return
  	 */
  	@RequestMapping(value="/operation/save",method=RequestMethod.POST)
	public ModelAndView toSave${tableInfo.entityBean.standName}DTO(HttpServletRequest request){
		ModelAndView mav= new ModelAndView();
		String jsonData = ServletRequestUtils.getStringParameter(request, "data", "");
		try {
			${tableInfo.entityBean.standName}DTO ${tableInfo.entityBean.lowerFirstCharName}DTO = JsonHelper.getInstance().readValue(jsonData, ${tableInfo.entityBean.standName}DTO.class);
			if("".equals(${tableInfo.entityBean.lowerFirstCharName}DTO.getId())){//新增
				service.insert${tableInfo.entityBean.standName}(${tableInfo.entityBean.lowerFirstCharName}DTO);
			}else{//修改
				service.update${tableInfo.entityBean.standName}Sensitive(${tableInfo.entityBean.lowerFirstCharName}DTO);
			}
			mav.addObject("flag", OpResult.success);
		} catch (Exception ex) {
			logger.debug(ex.getMessage());
			mav.addObject("error", ex.getMessage());
			mav.addObject("flag", OpResult.failure);
			return mav;  
		}
		return mav;
			
	}
  	/**
  	 * 按照id批量删除数据
  	 * @param ids id数组
  	 * @return
  	 */
  	@RequestMapping(value="/operation/delete",method=RequestMethod.POST)
	public ModelAndView toDelete${tableInfo.entityBean.standName}DTO(@RequestBody String[] ids,HttpServletRequest request){
		ModelAndView mav= new ModelAndView();
		try {
//  			LogBase logBase = LogBaseFactory.getLogBase( request);
			service.delete${tableInfo.entityBean.standName}ByIds(ids);
			mav.addObject("flag", OpResult.success);
		} catch (Exception ex) {
			logger.debug(ex.getMessage());
			mav.addObject("error", ex.getMessage());
			mav.addObject("flag", OpResult.failure);
			return mav;
		}
		return mav;
	}
  	
  	/**
	 *转向detail页面
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/toDetailJsp")
	public ModelAndView toDetailJsp(HttpServletRequest request) throws Exception {
		ModelAndView mav = new ModelAndView();
		String id = request.getParameter("id");
		${tableInfo.entityBean.standName}DTO demoBusinessFlow = service.query${tableInfo.entityBean.standName}ByPrimaryKey(id);
        mav.addObject("flag", OpResult.success);
        mav.addObject("${tableInfo.entityBean.lowerFirstCharName}", demoBusinessFlow);
		return mav;
	}
}
